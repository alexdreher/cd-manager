require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe CommentsController do

  def mock_comment(stubs={})
    @mock_comment ||= mock_model(Comment, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all comments as @comments" do
      Comment.stub(:all) { [mock_comment] }
      get :index
      assigns(:comments).should eq([mock_comment])
    end
  end

  describe "GET show" do
    it "assigns the requested comment as @comment" do
      Comment.stub(:find).with("37") { mock_comment }
      get :show, :id => "37"
      assigns(:comment).should be(mock_comment)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created comment as @comment" do
        Comment.stub(:new).with({'these' => 'params'}) { mock_comment(:save => true) }
        post :create, :comment => {'these' => 'params'}
        assigns(:comment).should be(mock_comment)
      end

      it "redirects to the commentable" do
        Comment.stub(:new) { mock_comment(:save => true) }
        post :create, :comment => {}
        response.should redirect_to(comment_url(mock_comment))
      end
    end
    
    describe "with invalid params" do
      it "redirects to the home page" do
        Comment.stub(:new) { mock_comment(:save => false) }
        post :create, :comment => {}
        response.should redirect_to(root_url)
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested comment" do
      Comment.stub(:find).with("37") { mock_comment }
      mock_comment.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the comments list" do
      Comment.stub(:find) { mock_comment }
      delete :destroy, :id => "1"
      response.should redirect_to(comments_url)
    end
  end

end
